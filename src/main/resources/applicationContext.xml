<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:task="http://www.springframework.org/schema/task" xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

    <context:component-scan base-package="com.music">
        <context:exclude-filter type="annotation"
            expression="org.springframework.stereotype.Controller" />
        <context:exclude-filter type="regex" expression="com\.music\.web\..*"/>
    </context:component-scan>

    <import resource="social.xml" />
    <import resource="jmx.xml" />
    <import resource="caches.xml" />

    <context:property-placeholder
        location="file:${music.config.location}/application.properties" />


    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
        destroy-method="close">
        <property name="jdbcUrl" value="${database.url}" />
        <property name="user" value="${database.username}" />
        <property name="password" value="${database.password}" />
        <property name="driverClass" value="${database.driver}" />
        <property name="testConnectionOnCheckin" value="true" />
        <property name="testConnectionOnCheckout" value="true" />
        <property name="acquireRetryAttempts" value="10" />
        <property name="acquireIncrement" value="5" />
        <property name="idleConnectionTestPeriod" value="540" />
        <property name="initialPoolSize" value="20" />
        <property name="maxPoolSize" value="100" />
        <property name="maxIdleTime" value="30" />
        <property name="maxStatements" value="50" />
        <property name="minPoolSize" value="10" />
    </bean>

    <bean id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="computoser" />
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <bean class="com.music.util.persistence.HibernateExtendedJpaVendorAdapter">
                <property name="showSql" value="${hibernate.showSql}" />
                <property name="databasePlatform" value="${hibernate.dialect}" />
                <property name="generateDdl" value="${hibernate.generateDDL}" />
                <!-- custom properties -->
                <property name="vendorProperties">
                    <util:map>
                        <entry key="hibernate.generate_statistics" value="${hibernate.statistics.enabled}" />
                        <entry key="net.sf.ehcache.configurationResourceName" value="ehcache.xml" />
                    </util:map>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <tx:annotation-driven />

    <bean id="s3Service" class="org.jets3t.service.impl.rest.httpclient.RestS3Service">
        <constructor-arg>
            <bean class="org.jets3t.service.security.AWSCredentials">
                <constructor-arg value="${s3.access.key}" />
                <constructor-arg value="${s3.secret}" />
            </bean>
        </constructor-arg>
    </bean>

    <task:scheduler id="poolScheduler" pool-size="5"/>
    <task:annotation-driven scheduler="poolScheduler" />

    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="resourceLoaderPath" value="classpath:/emailTemplates"/>
        <property name="velocityPropertiesMap">
            <util:map>
                <entry key="resource.loader.cache" value="true" />
            </util:map>
        </property>
    </bean>
</beans>